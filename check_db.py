import asyncio
import os
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

load_dotenv()

async def check_database():
    client = AsyncIOMotorClient(os.getenv("MONGO_URI", "mongodb://localhost:27017/former"))
    db = client.get_database()
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        collections = await db.list_collection_names()
        print(f"üìÅ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –ë–î: {collections}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤:")
        for collection_name in ['users', 'google_accounts', 'integrations', 'form_responses']:
            if collection_name in collections:
                indexes = await db[collection_name].list_indexes().to_list(length=None)
                print(f"  {collection_name}: {len(indexes)} –∏–Ω–¥–µ–∫—Å–æ–≤")
                for idx in indexes:
                    print(f"    - {idx['name']}: {idx['key']}")
            else:
                print(f"  {collection_name}: –∫–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        print("üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
        for collection_name in collections:
            count = await db[collection_name].count_documents({})
            print(f"  {collection_name}: {count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
        print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π:")
        
        # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ -> Google –∞–∫–∫–∞—É–Ω—Ç—ã
        integrations = await db.integrations.find().to_list(length=5)
        for integration in integrations:
            google_account = await db.google_accounts.find_one({"_id": integration.get("google_account_id")})
            if google_account:
                print(f"  ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è {integration['integration_name']} -> Google –∞–∫–∫–∞—É–Ω—Ç –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"  ‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è {integration['integration_name']} -> Google –∞–∫–∫–∞—É–Ω—Ç –ù–ï –Ω–∞–π–¥–µ–Ω!")
        
        # Form responses -> Integrations
        responses = await db.form_responses.find().to_list(length=5)
        for response in responses:
            integration = await db.integrations.find_one({"_id": response.get("integration_id")})
            if integration:
                print(f"  ‚úÖ Response {response['_id']} -> –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print(f"  ‚ùå Response {response['_id']} -> –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
        
        print()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(check_database()) 