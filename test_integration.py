import asyncio
import os
from motor.motor_asyncio import AsyncIOMotorClient
from bson import ObjectId
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

async def add_test_integration():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    client = AsyncIOMotorClient(os.getenv("MONGO_URI", "mongodb://localhost:27017/former"))
    db = client.get_database()
    
    # –ü–æ–ª—É—á–∞–µ–º API URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_url = os.getenv("API_URL", "http://localhost:8000")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    test_integration = {
        "user_tg_id": 123456,
        "integration_name": "Test Integration",
        "webhook_token": "TEST_TOKEN",
        "form_id": "form123",
        "google_sheet_id": "sheet123",
        "google_account_id": ObjectId(),
        "field_mapping": {"name": "A", "email": "B"},
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow()
    }
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        result = await db.integrations.insert_one(test_integration)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID: {result.inserted_id}")
        print(f"üîó Webhook URL: {api_url}/api/v1/yandex/webhook?token=TEST_TOKEN")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ—Ç—Å—è
        found = await db.integrations.find_one({"webhook_token": "TEST_TOKEN"})
        if found:
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(add_test_integration()) 